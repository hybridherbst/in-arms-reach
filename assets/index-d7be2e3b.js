class L{constructor(e){if(this._retries=0,!Number.isInteger(e)||e<0)throw new Error("Backoff must be a positive integer");this.backoff=e}get retries(){return this._retries}get current(){return this.backoff}next(){return this._retries++,this.backoff}reset(){this._retries=0}}class O{constructor(e,t){if(this._retries=0,!Number.isInteger(e)||e<0)throw new Error("Base must be a positive integer or zero");if(t!==void 0&&(!Number.isInteger(t)||t<0))throw new Error("ExpMax must be a undefined, a positive integer or zero");this.base=e,this.expMax=t,this.i=0}get retries(){return this._retries}get current(){return this.base*Math.pow(2,this.i)}next(){return this._retries++,this.i=this.expMax===void 0?this.i+1:Math.min(this.i+1,this.expMax),this.current}reset(){this._retries=0,this.i=0}}class x{constructor(e,t,i){if(this.i=0,this._retries=0,e<0)throw new Error("Initial must be a positive number or zero");if(t<0)throw new Error("Increment must be a positive number or zero");if(i!==void 0&&i<0)throw new Error("Max must be undefined, a positive number or zero");if(i!==void 0&&i<e)throw new Error("Max must be undefined or greater than or equal to initial");this.initial=e,this.increment=t,this.max=i}get retries(){return this._retries}get current(){return this.max===void 0?this.initial+this.increment*this.i:Math.min(this.initial+this.increment*this.i,this.max)}next(){return this._retries++,this.i++,this.current}reset(){this._retries=0,this.i=0}}class j{constructor(){this.elements=[]}add(e){this.elements.push(e)}clear(){this.elements.length=0}forEach(e){this.elements.forEach(e)}length(){return this.elements.length}isEmpty(){return this.elements.length===0}peek(){return this.elements[0]}read(){return this.elements.shift()}}class B{constructor(e){if(!Number.isInteger(e)||e<=0)throw new Error("Capacity must be a positive integer");this.elements=new Array(e+1),this.head=0,this.tail=0}add(e){this.elements[this.head]=e,this.head=(this.head+1)%this.elements.length,this.head===this.tail&&(this.tail=(this.tail+1)%this.elements.length)}clear(){this.head=0,this.tail=0}forEach(e){for(let t=this.tail;t!==this.head;t=(t+1)%this.elements.length)e(this.elements[t])}length(){return this.tail===this.head?0:this.tail<this.head?this.head-this.tail:this.elements.length-this.tail+this.head}isEmpty(){return this.head===this.tail}peek(){return this.isEmpty()?void 0:this.elements[this.tail]}read(){const e=this.peek();return e!==void 0&&(this.tail=(this.tail+1)%this.elements.length),e}}var s;(function(r){r.open="open",r.close="close",r.error="error",r.message="message",r.retry="retry",r.reconnect="reconnect"})(s||(s={}));class C{constructor(e,t,i){var n,o,h,d,a,u,c,v,_,f,g,b,y,m,E;this._closedByUser=!1,this.handleOpenEvent=l=>this.handleEvent(s.open,l),this.handleErrorEvent=l=>this.handleEvent(s.error,l),this.handleCloseEvent=l=>this.handleEvent(s.close,l),this.handleMessageEvent=l=>this.handleEvent(s.message,l),this._url=e,this._protocols=t,this._options={buffer:i==null?void 0:i.buffer,retry:{maxRetries:(n=i==null?void 0:i.retry)===null||n===void 0?void 0:n.maxRetries,instantReconnect:(o=i==null?void 0:i.retry)===null||o===void 0?void 0:o.instantReconnect,backoff:(h=i==null?void 0:i.retry)===null||h===void 0?void 0:h.backoff},listeners:{open:[...(a=(d=i==null?void 0:i.listeners)===null||d===void 0?void 0:d.open)!==null&&a!==void 0?a:[]],close:[...(c=(u=i==null?void 0:i.listeners)===null||u===void 0?void 0:u.close)!==null&&c!==void 0?c:[]],error:[...(_=(v=i==null?void 0:i.listeners)===null||v===void 0?void 0:v.error)!==null&&_!==void 0?_:[]],message:[...(g=(f=i==null?void 0:i.listeners)===null||f===void 0?void 0:f.message)!==null&&g!==void 0?g:[]],retry:[...(y=(b=i==null?void 0:i.listeners)===null||b===void 0?void 0:b.retry)!==null&&y!==void 0?y:[]],reconnect:[...(E=(m=i==null?void 0:i.listeners)===null||m===void 0?void 0:m.reconnect)!==null&&E!==void 0?E:[]]}},this._underlyingWebsocket=this.tryConnect()}get url(){return this._url}get protocols(){return this._protocols}get buffer(){return this._options.buffer}get maxRetries(){return this._options.retry.maxRetries}get instantReconnect(){return this._options.retry.instantReconnect}get backoff(){return this._options.retry.backoff}get closedByUser(){return this._closedByUser}get lastConnection(){return this._lastConnection}get underlyingWebsocket(){return this._underlyingWebsocket}get readyState(){return this._underlyingWebsocket.readyState}get bufferedAmount(){return this._underlyingWebsocket.bufferedAmount}get extensions(){return this._underlyingWebsocket.extensions}get binaryType(){return this._underlyingWebsocket.binaryType}set binaryType(e){this._underlyingWebsocket.binaryType=e}send(e){this.closedByUser||(this._underlyingWebsocket.readyState===this._underlyingWebsocket.OPEN?this._underlyingWebsocket.send(e):this.buffer!==void 0&&this.buffer.add(e))}close(e,t){this.cancelScheduledConnectionRetry(),this._closedByUser=!0,this._underlyingWebsocket.close(e,t)}addEventListener(e,t,i){this._options.listeners[e].push({listener:t,options:i})}removeEventListener(e,t,i){const n=o=>o.listener!==t||o.options!==i;this._options.listeners[e]=this._options.listeners[e].filter(n)}tryConnect(){return this._underlyingWebsocket=new WebSocket(this.url,this.protocols),this._underlyingWebsocket.addEventListener(s.open,this.handleOpenEvent),this._underlyingWebsocket.addEventListener(s.close,this.handleCloseEvent),this._underlyingWebsocket.addEventListener(s.error,this.handleErrorEvent),this._underlyingWebsocket.addEventListener(s.message,this.handleMessageEvent),this._underlyingWebsocket}clearWebsocket(){this._underlyingWebsocket.removeEventListener(s.open,this.handleOpenEvent),this._underlyingWebsocket.removeEventListener(s.close,this.handleCloseEvent),this._underlyingWebsocket.removeEventListener(s.error,this.handleErrorEvent),this._underlyingWebsocket.removeEventListener(s.message,this.handleMessageEvent),this._underlyingWebsocket.close()}dispatchEvent(e,t){const i=this._options.listeners[e],n=[];i.forEach(({listener:o,options:h})=>{o(this,t),(h===void 0||h.once===void 0||!h.once)&&n.push({listener:o,options:h})}),this._options.listeners[e]=n}handleEvent(e,t){switch(e){case s.close:this.dispatchEvent(e,t),this.scheduleConnectionRetryIfNeeded();break;case s.open:if(this.backoff!==void 0&&this._lastConnection!==void 0){const i={retries:this.backoff.retries,lastConnection:new Date(this._lastConnection)},n=new CustomEvent(s.reconnect,{detail:i});this.dispatchEvent(s.reconnect,n),this.backoff.reset()}this._lastConnection=new Date,this.dispatchEvent(e,t),this.sendBufferedData();break;case s.retry:this.dispatchEvent(e,t),this.clearWebsocket(),this.tryConnect();break;default:this.dispatchEvent(e,t);break}}sendBufferedData(){if(this.buffer!==void 0)for(let e=this.buffer.read();e!==void 0;e=this.buffer.read())this.send(e)}scheduleConnectionRetryIfNeeded(){if(this.closedByUser||this.backoff===void 0)return;const e=i=>{const n=new CustomEvent(s.retry,{detail:i});this.handleEvent(s.retry,n)},t={backoff:this._options.retry.instantReconnect===!0?0:this.backoff.next(),retries:this._options.retry.instantReconnect===!0?0:this.backoff.retries,lastConnection:this._lastConnection};(this._options.retry.maxRetries===void 0||t.retries<=this._options.retry.maxRetries)&&(this.retryTimeout=globalThis.setTimeout(()=>e(t),t.backoff))}cancelScheduledConnectionRetry(){globalThis.clearTimeout(this.retryTimeout)}}class M{constructor(e){this._url=e}get url(){return this._url}withProtocols(e){return this._protocols=e,this}get protocols(){return this._protocols}withMaxRetries(e){var t;return this._options=Object.assign(Object.assign({},this._options),{retry:Object.assign(Object.assign({},(t=this._options)===null||t===void 0?void 0:t.retry),{maxRetries:e})}),this}get maxRetries(){var e,t;return(t=(e=this._options)===null||e===void 0?void 0:e.retry)===null||t===void 0?void 0:t.maxRetries}withInstantReconnect(e){var t;return this._options=Object.assign(Object.assign({},this._options),{retry:Object.assign(Object.assign({},(t=this._options)===null||t===void 0?void 0:t.retry),{instantReconnect:e})}),this}get instantReconnect(){var e,t;return(t=(e=this._options)===null||e===void 0?void 0:e.retry)===null||t===void 0?void 0:t.instantReconnect}withBackoff(e){var t;return this._options=Object.assign(Object.assign({},this._options),{retry:Object.assign(Object.assign({},(t=this._options)===null||t===void 0?void 0:t.retry),{backoff:e})}),this}get backoff(){var e,t;return(t=(e=this._options)===null||e===void 0?void 0:e.retry)===null||t===void 0?void 0:t.backoff}withBuffer(e){return this._options=Object.assign(Object.assign({},this._options),{buffer:e}),this}get buffer(){var e;return(e=this._options)===null||e===void 0?void 0:e.buffer}onOpen(e,t){return this.addListener(s.open,e,t),this}onClose(e,t){return this.addListener(s.close,e,t),this}onError(e,t){return this.addListener(s.error,e,t),this}onMessage(e,t){return this.addListener(s.message,e,t),this}onRetry(e,t){return this.addListener(s.retry,e,t),this}onReconnect(e,t){return this.addListener(s.reconnect,e,t),this}build(){return new C(this._url,this._protocols,this._options)}addListener(e,t,i){var n,o,h,d,a,u,c,v,_,f,g,b,y,m,E,l,p,k,w,R,W;return this._options=Object.assign(Object.assign({},this._options),{listeners:{open:(h=(o=(n=this._options)===null||n===void 0?void 0:n.listeners)===null||o===void 0?void 0:o.open)!==null&&h!==void 0?h:[],close:(u=(a=(d=this._options)===null||d===void 0?void 0:d.listeners)===null||a===void 0?void 0:a.close)!==null&&u!==void 0?u:[],error:(_=(v=(c=this._options)===null||c===void 0?void 0:c.listeners)===null||v===void 0?void 0:v.error)!==null&&_!==void 0?_:[],message:(b=(g=(f=this._options)===null||f===void 0?void 0:f.listeners)===null||g===void 0?void 0:g.message)!==null&&b!==void 0?b:[],retry:(E=(m=(y=this._options)===null||y===void 0?void 0:y.listeners)===null||m===void 0?void 0:m.retry)!==null&&E!==void 0?E:[],reconnect:(k=(p=(l=this._options)===null||l===void 0?void 0:l.listeners)===null||p===void 0?void 0:p.reconnect)!==null&&k!==void 0?k:[],[e]:[...(W=(R=(w=this._options)===null||w===void 0?void 0:w.listeners)===null||R===void 0?void 0:R[e])!==null&&W!==void 0?W:[],{listener:t,options:i}]}}),this}}export{j as ArrayQueue,L as ConstantBackoff,O as ExponentialBackoff,x as LinearBackoff,B as RingQueue,C as Websocket,M as WebsocketBuilder,s as WebsocketEvent};
